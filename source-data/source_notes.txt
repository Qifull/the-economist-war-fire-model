Note:

Because we do not have the rights to share the underlying data files (which also, are very large), we cannot provide those here. However, as all our work draws on public sources, downloading the relevant files is easily possible by following the instructions given in the various scripts. Should you have any issues accessing these files, please open an issue. 

The below details instructions to get Cloud TIFFs from Google earth engine

Open Google Earth Engine. 
Select the area over Ukraine 
Run google earth engine script (script 1) and wait a few minutes. the tab can become unresponsive
Open chrome console and paste the two functions below (script 2 and script 3)
Run the tasklist function: runtaskList(); 
tab will freeze, wait a few minutes and then 
Run confirmAll once the dialogs are loaded: confirmAll();
Files will save to a Google drive folder


Script 1:

// https://github.com/fitoprincipe/geetools-code-editor/wiki/Batch
var batch = require('users/fitoprincipe/geetools:batch');

// import data
// https://developers.google.com/earth-engine/datasets/catalog/MODIS_061_MOD09GA
var collection = ee.ImageCollection('MODIS/061/MOD09GA')

// Define dates
var startDate = ee.Date.fromYMD(2022,1,1);
var endDate = ee.Date.fromYMD(2022,6,7);

// bands
var modisBands = ['sur_refl_b03','sur_refl_b04','sur_refl_b01','sur_refl_b02','sur_refl_b06','sur_refl_b07'];
var lsBands = ['blue','green','red','nir','swir1','swir2'];

// helper function to extract the QA bits
function getQABits(image, start, end, newName) {
    // Compute the bits we need to extract.
    var pattern = 0;
    for (var i = start; i <= end; i++) {
       pattern += Math.pow(2, i);
    }
    // Return a single band image of the extracted QA bits, giving the band
    // a new name.
    return image.select([0], [newName])
                  .bitwiseAnd(pattern)
                  .rightShift(start);
}

// A function to mask out cloudy pixels.
function maskQuality(image) {
  // Select the QA band.
  var QA = image.select('state_1km');
  // Get the internal_cloud_algorithm_flag bit.
  var internalQuality = getQABits(QA,8, 13, 'internal_quality_flag');
  // Return an image masking out cloudy areas.
  return image.updateMask(internalQuality.eq(0));
}

// create cloud free composite
var noCloud = collection.filterDate(startDate, endDate)
                        .map(maskQuality)
                        .select(modisBands, lsBands);

// create composite with clouds 
//var Cloud = collection.filterDate(iniDate,endDate)
//                             .select(modisBands,lsBands);


// vis parameters
var visParams = {bands:['red','green','blue'],min:0,max:3000,gamma:1.3};

// add the cloud free composite
Map.addLayer(noCloud, visParams ,'MODIS Composite');

// add the cloud composite
//Map.addLayer(Cloud.median(),visParams,'MODIS Composite clouds');

// Export image
// Scale reference: https://developers.google.com/earth-engine/exporting#scale-and-zoom
console.log(noCloud)

//Export.image.toDrive({
//  image: ee.Image(noCloud.toList(99).get(0)),
//  folder: 'ukraine_fires',
//  description: 'ukraine_fires_' + day.format("YYYY-MM-dd").getInfo(),
//  region: geometry
//})

batch.Download.ImageCollection.toDrive(noCloud, 'ukraine_fires_2022', {
  name: '{system_date}',
  region: geometry
})





Script 2:

function runTaskList() {
  var tasklist = document
    .querySelector('ee-task-pane')
    .shadowRoot.querySelectorAll('ee-button');
  tasklist.forEach((node) => {
    node.click();
  });
}





Script 3:

function confirmAll() {
  document.querySelectorAll('ee-image-config-dialog').forEach((n) => {
    var dialog = n.shadowRoot.querySelector('ee-dialog');
    var button = dialog.shadowRoot.querySelector(
      'paper-dialog .buttons .ok-button',
    );
    button.click();
  });
}

